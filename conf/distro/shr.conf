#-----------------------------------------------------------------------------
#@TYPE: Distribution
#@NAME: SHR
#@DESCRIPTION: Linux Distribution Configuration for Mobile Phones
#-----------------------------------------------------------------------------

# set default locale for images - we have to do that before
# including angstrom-2007-for-openmoko.inc because otherwise
# it will be already set to en-gb
IMAGE_LINGUAS ?= "en-us"

# Set the toolchain type (internal, external) and brand (generic, csl etc.)
TOOLCHAIN_TYPE ?= "internal"
TOOLCHAIN_BRAND ?= ""

#LIBC = "glibc"

require conf/distro/include/preferred-xorg-versions-X11R7.5.inc
require conf/distro/include/preferred-shr-versions.inc
require conf/distro/include/shr-autorev.inc

include conf/distro/minimal.conf

#
# Header
#
DISTRO_NAME = "shr"
DISTRO_VERSION = "-${DATE}"
DISTRO_REVISION = "2"
DISTRO_PR = ".4"
#DISTRO_TYPE = "release"
DISTRO_TYPE = "debug"
DISTRO = "shr"

#Generate locales on the buildsystem instead of on the target. Speeds up first boot, set to "1" to enable
PREFERRED_PROVIDER_qemu-native = "qemu-native"
ENABLE_BINARY_LOCALE_GENERATION ?= "1"

# We only want to build UTF8 locales
LOCALE_UTF8_ONLY = "1"

INHERIT += "testlab"

CVS_TARBALL_STASH += "http://build.shr-project.org/sources/"

PREMIRRORS = "(ftp|https?)$://.*/.* http://build.shr-project.org/sources/"

DISTRO_FEED_PREFIX ?= "shr-dev"
DISTRO_FEED_URI ?= "http://build.shr-project.org/shr-testing/ipk"

AB_DEPLOY_EXTRA ?= ""
DEPLOY_DIR_IMAGE = "${DEPLOY_DIR}/images/${MACHINE_ARCH}/${AB_DEPLOY_EXTRA}"

IMAGE_INITSCRIPTS = "initscripts-shr"
DISTRO_INITSCRIPTS = "initscripts-shr"
DISTRO_DEV_MANAGER = "udev"

IPKG_VARIANT = "opkg"

# Same kernel so same usb
PACKAGE_ARCH_pn-usb-gadget-mode_om-gta01 = "armv4t"
PACKAGE_ARCH_pn-usb-gadget-mode_om-gta02 = "armv4t"
# same kernel so same keymaps
PACKAGE_ARCH_pn-keymaps_om-gta01 = "armv4t"
PACKAGE_ARCH_pn-keymaps_om-gta02 = "armv4t"
# neod knows about both machines
PACKAGE_ARCH_pn-neod_om-gta01 = "armv4t"
PACKAGE_ARCH_pn-neod_om-gta02 = "armv4t"

PREFERRED_PROVIDER_gconf = "gconf"
PREFERRED_PROVIDER_virtual/shr-splash-theme = "shr-splash-theme-logo"
PREFERRED_PROVIDER_frameworkd-config = "frameworkd-config-shr"
PREFERRED_PROVIDER_gpsd = "fso-gpsd"
PREFERRED_PROVIDER_e-wm-menu = "e-wm-menu-shr"
PREFERRED_PROVIDER_openmoko-alsa-scenarios = "alsa-scenarii-shr"
PREFERRED_PROVIDER_virtual/alsa-scenarios = "alsa-scenarii-shr"
PREFERRED_PROVIDER_libfribidi = "fribidi"
PREFERRED_PROVIDER_bluez-libs = "bluez4"
PREFERRED_PROVIDER_bluez-utils = "bluez4"
PREFERRED_PROVIDER_classpath = "classpath"
PREFERRED_PROVIDER_virtual/javac-native = "ecj-bootstrap-native"
PREFERRED_PROVIDER_virtual/java-native = "jamvm-native"
PREFERRED_PROVIDER_virtual/gail = "gtk+"
PREFERRED_PROVIDER_opkg = "opkg"
PREFERRED_PROVIDER_virtual/java-initial = "cacao-initial"
PREFERRED_PROVIDER_atd = "atd-over-fso"

# Helper to say what image we built
SHR_VERSION_FILE = "${IMAGE_ROOTFS}/${sysconfdir}/shr-version"
ROOTFS_POSTPROCESS_COMMAND += "OLD_PWD=$PWD; cd `dirname '${FILE_DIRNAME}'`; echo Tag Name: `git tag|tail -n 1`> ${SHR_VERSION_FILE};cd $OLD_PWD;"
ROOTFS_POSTPROCESS_COMMAND += "OLD_PWD=$PWD; cd `dirname '${FILE_DIRNAME}'`; echo VERSION: `git-log -n1 --pretty=oneline|awk '{print $1}'` >> ${SHR_VERSION_FILE}; cd $OLD_PWD;"
ROOTFS_POSTPROCESS_COMMAND += "OLD_PWD=$PWD; cd `dirname '${FILE_DIRNAME}'`; echo Branch: ` git branch |awk '/*/{print $2}'` >> ${SHR_VERSION_FILE}; cd $OLD_PWD;"
ROOTFS_POSTPROCESS_COMMAND += "echo Build Host: `cat /etc/hostname` >> ${SHR_VERSION_FILE};"
ROOTFS_POSTPROCESS_COMMAND += "echo Time Stamp: `date -R` >> ${SHR_VERSION_FILE};"

#Package customization
EXTRA_OECONF-pn_qemu += " --target-list=arm-linux-user,arm-softmmu"
